@page "/fetchdata"
@using DebuggingFeatures.Shared

@inject IWeatherForecastService weatherService
@inject WeatherProcessor forecastProcessor
  
<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>

    <div><button @onclick="DemoObjectID">Object ID</button></div>
}

@code {
    private IEnumerable<WeatherForecast> forecasts;

    protected override async Task OnInitializedAsync()
    {
      forecasts = await weatherService.GetForecastAsync(DateTime.Now);

      WeatherForecast first = forecasts.First();

      foreach(var forecast in forecasts)
      {
        try
        {
          forecastProcessor.Process(forecast);
        }
        catch(Exception ex)
        {
          string msg = ex.Message;
        }
      }
    }

    private void DemoObjectID()
    {

    }
}
