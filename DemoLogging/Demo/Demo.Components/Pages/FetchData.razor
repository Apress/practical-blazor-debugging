@page "/fetchdata"
@using Demo.Shared
@inject IWeatherService weatherService
@inject ILogger<FetchData> logger

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<WeatherForecast> forecasts;

    protected override async Task OnInitializedAsync()
    {
      using(var scope = logger.BeginScope("Inside FetchData"))
      {
        try
        {
          logger.LogInformation("Fetching weatherdata");
          forecasts = await weatherService.GetAsync(DateTime.Now);
          logger.LogInformation("Fetch successfull");

        }
        catch (Exception ex)
        {
          logger.LogError(ex, "Failed fetching data");
        }
      }
    }

}
